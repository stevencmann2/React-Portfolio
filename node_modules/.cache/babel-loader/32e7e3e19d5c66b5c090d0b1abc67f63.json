{"ast":null,"code":"var _jsxFileName = \"/Users/stevenmann/Desktop/Portfolio Project/react-portfolio/src/components/Design/ContactForm.js\";\nimport React, { useState } from 'react';\nimport emailjs from 'emailjs-com';\nimport { Form, Row, Col, Button, Alert } from 'react-bootstrap';\n\nconst ContactForm = () => {\n  const [validation, setValidation] = useState(false);\n  const [emailText, setEmailText] = useState(\"\");\n  const [nameText, setNameText] = useState(\"\");\n  const [companyText, setCompanyText] = useState(\"\");\n  const [Reason, setReason] = useState();\n  const [messageText, setMessageText] = useState(\"\");\n  const [showErrorAlert, setShowErrorAlert] = useState(false);\n  const [successAlert, setSuccessAlert] = useState(false);\n\n  const emailHandler = e => {\n    setEmailText(e.target.value);\n  };\n\n  const nameHandler = e => {\n    setNameText(e.target.value);\n  };\n\n  const companyHandler = e => {\n    setCompanyText(e.target.value);\n  };\n\n  const handleReason = e => {\n    setReason(e.target.value);\n  };\n\n  const handleMessage = e => {\n    setMessageText(e.target.value);\n  };\n\n  const formCheck = event => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      setShowErrorAlert(true);\n    }\n\n    if (form.checkValidity() === true) {\n      setValidation(true);\n      sendEmail(event);\n    }\n  };\n\n  const sendEmail = event => {\n    event.preventDefault();\n    let templateParams = {\n      user_name: nameText,\n      user_email: emailText,\n      user_company: companyText,\n      reason: Reason,\n      message: messageText\n    };\n    emailjs.send('stevensgmail', 'contact_form', templateParams, 'user_iE2OnCTdGFWesLXzFqm3O').then(result => {\n      console.log(result.text);\n      setSuccessAlert(true);\n    }, error => {\n      console.log(error.text);\n    });\n    setShowErrorAlert(false);\n    clearForm();\n  };\n\n  const clearForm = () => {\n    setNameText(\"\");\n    setEmailText(\"\");\n    setMessageText(\"\");\n    setReason(\"\");\n    setCompanyText(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, showErrorAlert ? /*#__PURE__*/React.createElement(Alert, {\n    variant: \"danger\",\n    onClose: () => setShowErrorAlert(false),\n    dismissible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Alert.Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Incomplete Attempt\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"It looks like you were trying to contact Steven, but did not complete the form. Please make sure all fields are filled out completely to ensure your message is delivered.\")) : null, successAlert ? /*#__PURE__*/React.createElement(Alert, {\n    variant: \"success\",\n    onClose: () => setSuccessAlert(false),\n    dismissible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Alert.Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Message Sent\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Thank you for your message! I will respond as promptly as I can, please expect an email from stevencmann2@gmail.com.\")) : null, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validation,\n    onSubmit: formCheck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    large: 6,\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"contactForm.Name\",\n    value: nameText,\n    onChange: nameHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"name\",\n    placeholder: \"John Smith\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"contactForm.Email\",\n    value: emailText,\n    onChange: emailHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"email\",\n    placeholder: \"address@service.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"contactForm.Company\",\n    value: companyText,\n    onChange: companyHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, \"Company\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    type: \"company\",\n    placeholder: \"Company Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"contactForm.Reason\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, \"Reason for Contact\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    as: \"select\",\n    value: Reason,\n    onChange: handleReason,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 23\n    }\n  }, \"What's this about?\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Business Oppurtunity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 23\n    }\n  }, \"Business Opportunity\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Prospective Employer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 23\n    }\n  }, \"Prospective Employer\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Introduction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 23\n    }\n  }, \"Just Wanted to Introduce Myself\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Personal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 23\n    }\n  }, \"Personal\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Other\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 23\n    }\n  }, \"Other\")))), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    large: 6,\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"contactForm.Message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  }, \"Message\"), /*#__PURE__*/React.createElement(Form.Control, {\n    required: true,\n    as: \"textarea\",\n    rows: \"10\",\n    value: messageText,\n    onChange: handleMessage,\n    style: styles.messageBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 20\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    large: 12,\n    xl: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outline-success\",\n    size: \"lg\",\n    type: \"submit\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Send\")))));\n};\n\nconst styles = {\n  messageBox: {\n    height: '40vh',\n    resize: 'none'\n  }\n};\nexport default ContactForm;","map":{"version":3,"sources":["/Users/stevenmann/Desktop/Portfolio Project/react-portfolio/src/components/Design/ContactForm.js"],"names":["React","useState","emailjs","Form","Row","Col","Button","Alert","ContactForm","validation","setValidation","emailText","setEmailText","nameText","setNameText","companyText","setCompanyText","Reason","setReason","messageText","setMessageText","showErrorAlert","setShowErrorAlert","successAlert","setSuccessAlert","emailHandler","e","target","value","nameHandler","companyHandler","handleReason","handleMessage","formCheck","event","form","currentTarget","checkValidity","preventDefault","stopPropagation","sendEmail","templateParams","user_name","user_email","user_company","reason","message","send","then","result","console","log","text","error","clearForm","styles","messageBox","height","resize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport emailjs from 'emailjs-com';\nimport { Form, Row, Col, Button, Alert } from 'react-bootstrap'\n\nconst ContactForm = () => {\n\n    const [validation, setValidation] = useState(false);\n    const [emailText, setEmailText] = useState(\"\")\n    const [nameText, setNameText] = useState(\"\")\n    const [companyText, setCompanyText] = useState(\"\")\n    const [Reason, setReason] = useState()\n    const [messageText, setMessageText] = useState(\"\")\n\n    const [showErrorAlert, setShowErrorAlert] = useState(false)\n    const [successAlert, setSuccessAlert] = useState(false)\n\n    const emailHandler =(e)=>{\n        setEmailText(e.target.value) \n    }\n    const nameHandler =(e)=>{\n        setNameText(e.target.value) \n    }\n    const companyHandler =(e)=>{\n        setCompanyText(e.target.value) \n    }\n    const handleReason= (e) =>{\n        setReason(e.target.value)   \n    }\n    const handleMessage= (e) =>{\n      setMessageText(e.target.value)   \n  }\n    \n  const formCheck = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) { \n      event.preventDefault();\n      event.stopPropagation();\n      setShowErrorAlert(true)\n    }\n\n    if (form.checkValidity() === true){\n    setValidation(true) \n    sendEmail(event);\n    }\n  };\n  \n\n\nconst sendEmail = (event) => {\n\n  event.preventDefault();\n\n let templateParams = {\n    user_name: nameText,\n    user_email: emailText,\n    user_company: companyText,\n    reason: Reason, \n    message: messageText\n  }\n\n    emailjs.send('stevensgmail', 'contact_form', templateParams, 'user_iE2OnCTdGFWesLXzFqm3O')\n      .then((result) => {\n          console.log(result.text);\n          setSuccessAlert(true)\n      }, \n      (error) => {\n          console.log(error.text);\n\n      });\n      setShowErrorAlert(false)\n      clearForm();\n  }\n\n  const clearForm = () => {\n    setNameText(\"\");\n    setEmailText(\"\");\n    setMessageText(\"\");\n    setReason(\"\");\n    setCompanyText(\"\");\n  }\n  \n\n  return (\n    <div>\n      {showErrorAlert ? (\n        <Alert variant=\"danger\" onClose={() => setShowErrorAlert(false)} dismissible>\n          <Alert.Heading>Incomplete Attempt</Alert.Heading>\n            <p>\n              It looks like you were trying to contact Steven, but did not complete the form. \n              Please make sure all fields are filled out completely to ensure your message is delivered. \n            </p>\n      </Alert>\n      ) : (null)}\n\n      {successAlert ? (\n        <Alert variant=\"success\" onClose={() => setSuccessAlert(false)} dismissible>\n          <Alert.Heading>Message Sent</Alert.Heading>\n            <p>\n              Thank you for your message! I will respond as promptly as I can, please expect an email from stevencmann2@gmail.com. \n            </p>\n      </Alert>\n      ) : (null)}\n  \n    <Form noValidate validated={validation} onSubmit={formCheck}>\n        <Row>\n            <Col xs={12} sm={12} md={6} large={6} xl={6} >\n\n                <Form.Group controlId=\"contactForm.Name\" value={nameText} onChange={nameHandler} >\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control required type=\"name\" placeholder=\"John Smith\" />  \n                </Form.Group>\n\n                <Form.Group controlId=\"contactForm.Email\" value={emailText} onChange={emailHandler} >\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control required type=\"email\" placeholder=\"address@service.com\" />\n                </Form.Group>\n\n                <Form.Group controlId=\"contactForm.Company\" value={companyText} onChange={companyHandler} >\n                    <Form.Label>Company</Form.Label>\n                    <Form.Control required type=\"company\" placeholder=\"Company Name\" />\n                </Form.Group>\n\n                <Form.Group controlId=\"contactForm.Reason\">\n                  <Form.Label>Reason for Contact</Form.Label>\n                    <Form.Control required as=\"select\" value={Reason} onChange={handleReason}>\n                      <option value=\"\">What's this about?</option>\n                      <option value=\"Business Oppurtunity\">Business Opportunity</option>\n                      <option value=\"Prospective Employer\">Prospective Employer</option>\n                      <option value=\"Introduction\">Just Wanted to Introduce Myself</option>\n                      <option value=\"Personal\">Personal</option>\n                      <option value=\"Other\">Other</option>\n                  </Form.Control>\n                </Form.Group>\n\n            </Col>\n\n            <Col xs={12} sm={12} md={6} large={6} xl={6} >\n                <Form.Group controlId=\"contactForm.Message\">\n                  <Form.Label>Message</Form.Label>\n                   <Form.Control required as=\"textarea\" rows=\"10\"  \n                      value={messageText} onChange={handleMessage}\n                      style={styles.messageBox}/>\n                </Form.Group>\n            </Col>\n\n        </Row>\n        \n        <Row>\n          <Col xs={12} sm={12} md={12} large={12} xl={12}>\n            <Button variant=\"outline-success\" size=\"lg\" type=\"submit\" block>\n                Send \n            </Button>\n          </Col>\n        </Row>\n\n  </Form>\n  </div>\n    \n  );\n}\n\n\nconst styles = {\n  messageBox: {\n    height: '40vh',\n    resize: 'none'\n  }\n}\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}